.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH "bpan" 1 "2022-09-30" "md2man v0.1.0" "Bash Package Manager"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BPAN"
.IX Header "BPAN"
Bash Packages Are Nifty
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
Using the \f(CW\*(C`bpan\*(C'\fR \s-1CLI\s0 tool:
.PP
.Vb 4
\&    $ bpan search utils
\&    $ bpan install somebody/path\-utils
\&    $ bpan new /path/to/my\-project
\&    $ bpan add getopt\-bash ingydotnet/json\-bash
.Ve
.PP
Use the \f(CW\*(C`bpan\*(C'\fR Bash library in your Bash code:
.PP
.Vb 1
\&    #!/usr/bin/env bash
\&
\&    source "$MY_PROJECT_ROOT/.bpan/lib/bpan.bash" \-\-
\&
\&    bpan:source bashplus=0.1.0
\&    bpan:source bpan\-org/getopt
\&    bpan:source github:ingydotnet/json
.Ve
.PP
Publish your Bash packages:
.PP
.Vb 2
\&    $ bpan register .
\&    $ bpan publish .
.Ve
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
\&\s-1BPAN\s0 is the \*(L"Missing Bash Package Manager\*(R".
.PP
It does 3 big things for you and your Bash code:
.IP "\(bu" 4
Find/install \s-1CLI\s0 programs/libaries written in Bash
.IP "\(bu" 4
Install, manage, bundle Bash deps for a project
.IP "\(bu" 4
Register and publish Bash packages that you make
.SS "\s-1INSTALLATION\s0"
.IX Subsection "INSTALLATION"
\&\s-1BPAN,\s0 works and is tested under the following shells: \f(CW\*(C`bash\*(C'\fR, \f(CW\*(C`zsh\*(C'\fR, \f(CW\*(C`fish\*(C'\fR, \f(CW\*(C`ksh\*(C'\fR, \f(CW\*(C`mksh\*(C'\fR, \f(CW\*(C`tcsh\*(C'\fR, \f(CW\*(C`ash\*(C'\fR, \f(CW\*(C`dash\*(C'\fR, \f(CW\*(C`posh\*(C'\fR and \f(CW\*(C`sh\*(C'\fR.
.IP "1. Clone the \s-1BPAN\s0 repo:" 4
.IX Item "1. Clone the BPAN repo:"
.Vb 1
\&    git clone https://github.com/bpan\-org/bpan "$HOME/.bpan"
.Ve
.ie n .IP "1. Source the \s-1BPAN\s0 "".rc"" file to use ""bpan"" immediately:" 4
.el .IP "1. Source the \s-1BPAN\s0 \f(CW.rc\fR file to use \f(CWbpan\fR immediately:" 4
.IX Item "1. Source the BPAN .rc file to use bpan immediately:"
.Vb 1
\&    source "$HOME/.bpan/.rc"
.Ve
.Sp
For \f(CW\*(C`ksh\*(C'\fR, \f(CW\*(C`mksh\*(C'\fR, \f(CW\*(C`ash\*(C'\fR, \f(CW\*(C`dash\*(C'\fR, \f(CW\*(C`posh\*(C'\fR and \f(CW\*(C`sh\*(C'\fR: set \f(CW\*(C`BPAN_ROOT\*(C'\fR first, and use \f(CW\*(C`.\*(C'\fR instead of \f(CW\*(C`source\*(C'\fR:
.Sp
.Vb 1
\&    BPAN_ROOT=$HOME/.bpan/.rc . "$HOME/.bpan/.rc"
.Ve
.ie n .IP "1. Add the command in step 2 to your shell's startup file (""$HOME/.bashrc"", etc)." 4
.el .IP "1. Add the command in step 2 to your shell's startup file (\f(CW$HOME/.bashrc\fR, etc)." 4
.IX Item "1. Add the command in step 2 to your shell's startup file ($HOME/.bashrc, etc)."
.PP
\&\s-1NOTE:\s0 \f(CW\*(C`$HOME/.bpan/\*(C'\fR can be changed above to any other location that you wish to install \s-1BPAN.\s0
.PP
\fIPrerequisites\fR
.IX Subsection "Prerequisites"
.PP
\&\s-1BPAN\s0 needs just a few very common things to work:
.IP "\(bu" 4
Bash 3.2+
.RS 4
.IP "\(bu" 4
The \s-1BPAN\s0 system is written in Bash (of course)
.RE
.RS 4
.RE
.IP "\(bu" 4
Git 2.7+
.RS 4
.IP "\(bu" 4
Required by \f(CW\*(C`bpan\*(C'\fR \s-1CLI\s0 and many packages, but...
.IP "\(bu" 4
Not required by programs using packages (that don't require it)
.RE
.RS 4
.RE
.IP "\(bu" 4
GitHub account
.RS 4
.IP "\(bu" 4
Only needed to register and publish packages
.IP "\(bu" 4
\&\s-1BPAN\s0 publishing only works on GitHub at the current time
.RE
.RS 4
.RE
.ie n .SS "\s-1USING THE\s0 ""BPAN"" \s-1CLI\s0"
.el .SS "\s-1USING THE\s0 \f(CWBPAN\fP \s-1CLI\s0"
.IX Subsection "USING THE BPAN CLI"
The \f(CW\*(C`bpan\*(C'\fR command has 2 major roles:
.IP "\(bu" 4
Finding and installing \s-1BPAN\s0 packages system-wide
.RS 4
.IP "\(bu" 4
These are generally \f(CW\*(C`bin\*(C'\fR scripts in your \f(CW\*(C`PATH\*(C'\fR
.IP "\(bu" 4
They are installed by default under \f(CW\*(C`$BPAN_ROOT/local/\*(C'\fR
.IP "\(bu" 4
The \f(CW\*(C`search\*(C'\fR and \f(CW\*(C`install\*(C'\fR \s-1BPAN\s0 commands are common
.RE
.RS 4
.RE
.IP "\(bu" 4
Managing \s-1BPAN\s0 dependency libraries for a project
.RS 4
.IP "\(bu" 4
The \f(CW\*(C`.bpan/config\*(C'\fR file declares your \s-1BPAN\s0 dependencies
.IP "\(bu" 4
Things get added to your project under \f(CW\*(C`.bpan/\*(C'\fR
.IP "\(bu" 4
The \f(CW\*(C`init\*(C'\fR, \f(CW\*(C`add\*(C'\fR and \f(CW\*(C`update\*(C'\fR commands are common
.RE
.RS 4
.RE
.PP
Commands are grouped into 3 categories:
.IP "\(bu" 4
System-wide
.IP "\(bu" 4
Per-project
.IP "\(bu" 4
Informational
.PP
Start with \f(CW\*(C`bpan \-\-help\*(C'\fR to get the basic usage info.
.PP
Documentation can be read with \f(CW\*(C`man bpan\*(C'\fR.
.SS "\s-1USING BPAN IN A PROJECT\s0"
.IX Subsection "USING BPAN IN A PROJECT"
\&\s-1BPAN\s0 is intended to be used mostly in software projects that have Bash dependencies.
.PP
To create a new project from scratch (that uses \s-1BPAN\s0):
.PP
.Vb 1
\&    bpan new <dir\-name>
.Ve
.PP
To add \s-1BPAN\s0 support (\f(CW\*(C`.bpan/\*(C'\fR) to an existing project:
.PP
.Vb 1
\&    bpan init
.Ve
.PP
To add a \s-1BPAN\s0 dependency to a project:
.PP
.Vb 1
\&    bpan add bashplus getopt\-bash
.Ve
.PP
To update the \s-1BPAN\s0 dependency files and generate man pages:
.PP
.Vb 1
\&    bpan update
.Ve
.PP
\fISystem-wide \s-1BPAN\s0 Directory and File Layout\fR
.IX Subsection "System-wide BPAN Directory and File Layout"
.PP
When you install packages system-wide with \s-1BPAN,\s0 things are stored under the \f(CW\*(C`$HOME/.bpan/local/\*(C'\fR directory.
.PP
There are several \f(CW\*(C`$HOME/.bpan/local/\*(C'\fR subdirectories where things get installed into:
.IP "\(bu" 4
\&\f(CW\*(C`bin/\*(C'\fR \- Executable Bash programs (in \f(CW$PATH\fR)
.IP "\(bu" 4
\&\f(CW\*(C`lib/\*(C'\fR \- Supporting Bash libraries
.IP "\(bu" 4
\&\f(CW\*(C`share/\*(C'\fR \- Any supporting files needed by programs
.IP "\(bu" 4
\&\f(CW\*(C`man/man1/\*(C'\fR \- Program docs
.IP "\(bu" 4
\&\f(CW\*(C`man/man3/\*(C'\fR \- Library docs
.IP "\(bu" 4
\&\f(CW\*(C`src/\*(C'\fR \- Source code repository clones/downloads
.PP
\fIPer-project \s-1BPAN\s0 Directory and File Layout\fR
.IX Subsection "Per-project BPAN Directory and File Layout"
.PP
\&\s-1BPAN\s0 installs per-project things under a \f(CW\*(C`.bpan/\*(C'\fR directory in the root of your project.
.PP
There are 3 main files to be aware of:
.ie n .IP "1. ""./.rc""" 4
.el .IP "1. \f(CW./.rc\fR" 4
.IX Item "1. ./.rc"
This file is responsible for defining and exporting \f(CW\*(C`MY_PROJECT_ROOT\*(C'\fR where \f(CW\*(C`MY_PROJECT\*(C'\fR is the name of your project. This environment variable is the key to bootstrapping \s-1BPAN\s0 and other things that your project will need. While not strictly necessary, it is highly recommended.
.ie n .IP "1. ""./.bpan/config""" 4
.el .IP "1. \f(CW./.bpan/config\fR" 4
.IX Item "1. ./.bpan/config"
This is your project's \s-1BPAN\s0 configuration file. It's where you make all of your configuration choices and list all the \s-1BPAN\s0 dependency packages.
.ie n .IP "1. ""./.bpan/lib/bpan.bash""" 4
.el .IP "1. \f(CW./.bpan/lib/bpan.bash\fR" 4
.IX Item "1. ./.bpan/lib/bpan.bash"
This is the file that you \f(CW\*(C`source\*(C'\fR in your programs to initialize the \s-1BPAN\s0 environment, with something like:
.Sp
.Vb 4
\&    source "$MY_PROJECT_ROOT/.bpan/lib/bpan.bash" \-\-
\&    # or:
\&    export PATH=$MY_PROJECT_ROOT/.bpan/lib:$PATH
\&    source bpan \-\-
.Ve
.Sp
This will initialize all the settings that you have chosen for your project, and autoload all the \s-1BPAN\s0 packages that you have configured.
.PP
Additionally there are 3 possible \f(CW\*(C`.bpan/\*(C'\fR sub-directories:
.IP "\(bu" 4
\&\f(CW\*(C`.bpan/lib/\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`.bpan/bin/\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`.bpan/share/\*(C'\fR
.PP
This is where your per-project dependency package assets are installed to.
.PP
\fIProject \f(CI\*(C`.bpan/config\*(C'\fI Configuration\fR
.IX Subsection "Project .bpan/config Configuration"
.PP
A typical \s-1BPAN\s0 \f(CW\*(C`config\*(C'\fR file looks like:
.PP
.Vb 2
\&    [bpan]
\&    api\-version = 1
\&
\&    [package]
\&    name = thinger\-bash
\&    version = 0.1.0
\&    title = Do the thing
\&    license = MIT
\&    copyright = 2022
\&
\&    repo = https://github.com/$author.github/$package.name
\&    branch = main
\&    site = $package.repo
\&    bug = $package.repo/issues/
\&    irc = irc.libera.chat/bpan
\&
\&    [author]
\&    name = Ingy do\*:t Net
\&    email = ingy@ingy.net
\&    github = ingydotnet
\&    twitter = ingydotnet
\&    irc = ingy@irc.libera.chat
\&    matrix = @ingy:yaml.io
\&    site = https://github.com/$author.github
\&
\&    [owner]
\&    github = ingydotnet
\&
\&    [require "package"]
\&    bashplus = 0.1.0+
\&    getopt\-bash = 0.1.0+
\&
\&    [require "command"]
\&    bash = 4.4+
\&    git = 2.25+
\&    perl = 5.28.3+
\&
\&    [update]
\&    package = bashplus
\&    package = getopt\-bash
\&    file = License
\&    file = Makefile
\&    file = ReadMe.md doc/thinger.md
\&    file = test/init
\&    file = test/00\-shellcheck.t
\&    man1 = doc/thinger.md
.Ve
.SS "\s-1BPAN SOURCES\s0"
.IX Subsection "BPAN SOURCES"
Currently, all \s-1BPAN\s0 installable packages are specific commits in public Git repositories.
.PP
The \s-1BPAN\s0 index lives here: <https://github.com/bpan\-org/bpan\-index>
.SS "\s-1COPYRIGHT AND LICENSE\s0"
.IX Subsection "COPYRIGHT AND LICENSE"
Copyright 2022 by Ingy do\*:t Net
.PP
This is free software, licensed under:
.PP
The \s-1MIT\s0 (X11) License
