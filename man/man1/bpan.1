.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH "bpan" 1 "2022-11-27" "md2man v0.1.0" "Bash Package Manager"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BPAN"
.IX Header "BPAN"
Bash Packages Are Nearby
.SS "\s-1BPAN DOCUMENTATION\s0"
.IX Subsection "BPAN DOCUMENTATION"
.IP "\(bu" 4
[[bpan\-overview]]
.IP "\(bu" 4
[[bpan\-user\-guide]]
.IP "\(bu" 4
[[bpan\-author\-guide]]
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
Using the \f(CW\*(C`bpan\*(C'\fR \s-1CLI\s0 tool:
.PP
.Vb 5
\&    $ bpan \-\-help
\&    $ bpan cmds
\&    $ bpan help <command>
\&    $ bpan search utils
\&    $ bpan install somebody/path\-utils
.Ve
.PP
Use the \f(CW\*(C`bpan\*(C'\fR Bash library in your Bash code:
.PP
.Vb 1
\&    #!/usr/bin/env bash
\&
\&    source "$MY_PROJECT_ROOT/.bpan/lib/bpan.bash" \-\-
\&
\&    bpan:source bashplus=0.1.0
\&    bpan:source bpan\-org/getopt
\&    bpan:source github:ingydotnet/json
.Ve
.PP
Create new packages with \s-1BPAN:\s0
.PP
.Vb 4
\&    $ bpan new \-\-lib foo\-bar\-bash
\&    $ bpan add \-\-pkg=json\-bash
\&    $ bpan add \-\-file=test/foo.t
\&    $ bpan update
.Ve
.PP
Publish your Bash packages:
.PP
.Vb 3
\&    $ bpan bump \-\-push  # Prep the next publish commit
\&    $ bpan register .   # Add new package entry to Index
\&    $ bpan publish .    # Update package\*(Aqs Index entry
.Ve
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
\&\s-1BPAN\s0 is the \*(L"Missing Bash Package Manager\*(R".
.PP
It does 3 big things for you and your Bash code:
.IP "\(bu" 4
Find/install \s-1CLI\s0 programs/libaries written in Bash
.IP "\(bu" 4
Install, manage, bundle Bash deps for a project
.IP "\(bu" 4
Register and publish Bash packages that you make
.SS "\s-1INSTALLATION\s0"
.IX Subsection "INSTALLATION"
Installing \s-1BPAN\s0 is simple and everything happens in a single directory on your host machine. The standard location is \f(CW\*(C`$HOME/.bpan/\*(C'\fR but you can change it to anything you like.
.PP
\&\s-1BPAN\s0 works and is tested under the following shells: \f(CW\*(C`bash\*(C'\fR, \f(CW\*(C`zsh\*(C'\fR, \f(CW\*(C`fish\*(C'\fR, \f(CW\*(C`ksh\*(C'\fR, \f(CW\*(C`mksh\*(C'\fR, \f(CW\*(C`tcsh\*(C'\fR, \f(CW\*(C`yash\*(C'\fR, \f(CW\*(C`ash\*(C'\fR, \f(CW\*(C`dash\*(C'\fR, \f(CW\*(C`mrsh\*(C'\fR, \f(CW\*(C`posh\*(C'\fR and \f(CW\*(C`sh\*(C'\fR.
.PP
\fIInstalling with the \s-1BPAN\s0 Installation Script\fR
.IX Subsection "Installing with the BPAN Installation Script"
.PP
You can run this command from any of the above shells to install \s-1BPAN:\s0
.PP
.Vb 1
\&    curl \-sL get.bpan.org | bash
.Ve
.PP
The script will try to identify your interactive shell type, and will choose an installation location of \f(CW\*(C`$HOME/.bpan/\*(C'\fR.
.PP
You can override these with the \f(CW\*(C`BPAN_SHELL\*(C'\fR and \f(CW\*(C`BPAN_ROOT\*(C'\fR environment variables like this:
.PP
.Vb 1
\&    curl \-sL get.bpan.org | BPAN_SHELL=abcsh BPAN_ROOT=/some/path bash
.Ve
.PP
\fIInstall \s-1BPAN\s0 from its Source Repository\fR
.IX Subsection "Install BPAN from its Source Repository"
.PP
\&\s-1NOTE:\s0 You can replace \f(CW\*(C`$HOME/.bpan\*(C'\fR below with any directory path you wish.
.IP "1. Clone the \s-1BPAN\s0 repo:" 4
.IX Item "1. Clone the BPAN repo:"
.Vb 1
\&    git clone https://github.com/bpan\-org/bpan "$HOME/.bpan"
.Ve
.ie n .IP "1. Source the \s-1BPAN\s0 "".rc"" file to use ""bpan"" immediately. Use one of these commands, depending on your shell:" 4
.el .IP "1. Source the \s-1BPAN\s0 \f(CW.rc\fR file to use \f(CWbpan\fR immediately. Use one of these commands, depending on your shell:" 4
.IX Item "1. Source the BPAN .rc file to use bpan immediately. Use one of these commands, depending on your shell:"
.Vb 12
\&    ash  |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
\&    bash |                     source /path/to/bpan/.rc
\&    dash |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
\&    fish |                     source /path/to/bpan/.rc
\&    ksh  |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
\&    mksh |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
\&    mrsh | BPAN_ROOT=/path/to/bpan; . /path/to/bpan/.rc
\&    posh |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
\&    sh   |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
\&    tcsh |                     source /path/to/bpan/.rc
\&    yash |                          . /path/to/bpan/.rc 2>/dev/null
\&    zsh  |                     source /path/to/bpan/.rc
.Ve
.ie n .IP "1. Add the command in step 2 to your shell's startup file (""$HOME/.bashrc"", etc)." 4
.el .IP "1. Add the command in step 2 to your shell's startup file (\f(CW$HOME/.bashrc\fR, etc)." 4
.IX Item "1. Add the command in step 2 to your shell's startup file ($HOME/.bashrc, etc)."
.PP
\&\s-1NOTE:\s0 \f(CW\*(C`$HOME/.bpan/\*(C'\fR can be changed above to any other location that you wish to install \s-1BPAN.\s0
.PP
\fIPrerequisites\fR
.IX Subsection "Prerequisites"
.PP
\&\s-1BPAN\s0 needs just a few very common things to work:
.IP "\(bu" 4
Bash 3.2+
.RS 4
.IP "\(bu" 4
The \s-1BPAN\s0 system is written in Bash (of course)
.RE
.RS 4
.RE
.IP "\(bu" 4
Git 2.7+
.RS 4
.IP "\(bu" 4
Required by \f(CW\*(C`bpan\*(C'\fR \s-1CLI\s0 and many packages, but...
.IP "\(bu" 4
Not required by programs using packages (that don't require it)
.RE
.RS 4
.RE
.IP "\(bu" 4
GitHub account
.RS 4
.IP "\(bu" 4
Only needed to register and publish packages
.IP "\(bu" 4
\&\s-1BPAN\s0 publishing only works on GitHub at the current time
.RE
.RS 4
.RE
.SS "\s-1COPYRIGHT AND LICENSE\s0"
.IX Subsection "COPYRIGHT AND LICENSE"
Copyright 2022 by Ingy do\*:t Net
.PP
This is free software, licensed under:
.PP
The \s-1MIT\s0 (X11) License
