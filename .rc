#!/bash

# Use one of the following commands to activate `bpan` in your shell:
#
# ash  |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
# bash |                     source /path/to/bpan/.rc
# dash |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
# fish |                     source /path/to/bpan/.rc
# ksh  |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
# mksh |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
# mrsh | BPAN_ROOT=/path/to/bpan; . /path/to/bpan/.rc
# posh |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
# sh   |  BPAN_ROOT=/path/to/bpan . /path/to/bpan/.rc
# tcsh |                     source /path/to/bpan/.rc
# yash |                          . /path/to/bpan/.rc 2>/dev/null
# zsh  |                     source /path/to/bpan/.rc

# Note: tcsh must come first or this won't work (for tcsh).

# tcsh
test -n "$tcsh" && eval '\
setenv BPAN_SHELL tcsh \
set s = ($_) \
@ i = $#s - 1 \
set d = `dirname $s[$i]` \
setenv BPAN_ROOT `cd $d && pwd -P` \
setenv PATH "$BPAN_ROOT/bin:$BPAN_ROOT/local/bin:$PATH" \
setenv MANPATH "$BPAN_ROOT/man:$BPAN_ROOT/local/man:$MANPATH" \
bpan setup \
exit 0 \
'

# bash
test -n "$BASH_VERSION" && eval '
BPAN_SHELL=bash
BPAN_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)
PATH=$BPAN_ROOT/bin:$BPAN_ROOT/local/bin:$PATH
MANPATH=$BPAN_ROOT/man:$BPAN_ROOT/local/man:$MANPATH
export BPAN_SHELL BPAN_ROOT PATH MANPATH
bpan --setup
source "$BPAN_ROOT/share/lib/complete.sh"
return
'

# zsh
test -n "$ZSH_VERSION" && eval '
BPAN_SHELL=zsh
BPAN_ROOT=$(cd "$(dirname "$0")" && pwd -P)
PATH=$BPAN_ROOT/bin:$BPAN_ROOT/local/bin:$PATH
MANPATH=$BPAN_ROOT/man:$BPAN_ROOT/local/man:$MANPATH
export BPAN_SHELL BPAN_ROOT PATH MANPATH
bpan --setup
source "$BPAN_ROOT/share/lib/complete.sh"
return
'

# fish
test -n "$FISH_VERSION" && eval '
set BPAN_SHELL fish
set BPAN_ROOT (cd (dirname (status filename)) && pwd -P)
set PATH $BPAN_ROOT/bin:$BPAN_ROOT/local/bin:$PATH
set MANPATH $BPAN_ROOT/man:$BPAN_ROOT/local/man:$MANPATH
export BPAN_SHELL BPAN_ROOT PATH MANPATH
bpan --setup
grep -B999 "#/FISH" share/lib/complete.sh | string split0 | source
exit
'

# yash
test -n "$YASH_VERSION" && eval '
BPAN_SHELL=yash
BPAN_ROOT=$(cd "$(dirname "$0")" && pwd -P)
PATH=$BPAN_ROOT/bin:$BPAN_ROOT/local/bin:$PATH
MANPATH=$BPAN_ROOT/man:$BPAN_ROOT/local/man:$MANPATH
export BPAN_SHELL BPAN_ROOT PATH MANPATH
bpan --setup
return
'

# Other shells including:
# ash, dash, ksh, mksh, mrsh, posh, sh
test -d "$BPAN_ROOT" && eval '
BPAN_SHELL=$0
PATH=$BPAN_ROOT/bin:$BPAN_ROOT/local/bin:$PATH
MANPATH=$BPAN_ROOT/man:$BPAN_ROOT/local/man:$MANPATH
export BPAN_SHELL BPAN_ROOT PATH MANPATH
bpan --setup
return
'

echo "ERROR: for shell '$0', set BPAN_ROOT=/path/to/bpan before sourcing .rc"

# vim: ft=sh:
